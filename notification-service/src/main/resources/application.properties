spring.application.name=notification-service
server.port=8084

#Kafka Consumer Properties
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationServer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8085
spring.kafka.consumer.properties.specific.avro.reader=true
#spring.kafka.consumer.properties.spring.json.type.mapping=event:com.triton.order.event.OrderPlacedEvent

#Mail Properties
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=c1bd9d4a58a3f2
spring.mail.password=da1b81b3c14bd3

# Exposed Actuator Endpoints
management.endpoints.web.exposure.include=health, info, metrics, prometheus

# Send observation for every request
management.metrics.distributions.percentiles-histogram.http.server.requests=true

# Set key of every observation as 'product-service'
management,observation.key-values.application=product-service

# generate traces for 100% request (By default springboot generate only 10%)
management.tracing.sampling.probability=1.0